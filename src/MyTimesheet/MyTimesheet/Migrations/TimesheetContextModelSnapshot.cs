// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTimesheet.Models;

namespace MyTimesheet.Migrations
{
    [DbContext(typeof(TimesheetContext))]
    partial class TimesheetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyTimesheet.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("client")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MyTimesheet.Models.Date", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration");

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<DateTime>("date");

                    b.HasKey("Id");

                    b.ToTable("Date");
                });

            modelBuilder.Entity("MyTimesheet.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Surname")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MyTimesheet.Models.TimesheetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Billable");

                    b.Property<string>("Description");

                    b.Property<int?>("clientId");

                    b.Property<int>("clientIid");

                    b.Property<int>("dateId");

                    b.Property<int>("personId");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.HasIndex("dateId");

                    b.HasIndex("personId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("MyTimesheet.Models.TimesheetEntry", b =>
                {
                    b.HasOne("MyTimesheet.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId");

                    b.HasOne("MyTimesheet.Models.Date", "date")
                        .WithMany()
                        .HasForeignKey("dateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyTimesheet.Models.Person", "person")
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
