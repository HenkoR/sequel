// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTimesheet.Models;

namespace MyTimesheet.Migrations
{
    [DbContext(typeof(TimesheetContext))]
    [Migration("20190126140140_EmpReview")]
    partial class EmpReview
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyTimesheet.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitle");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<string>("Team");

                    b.Property<int?>("TimesheetEntryId");

                    b.HasKey("EmpId");

                    b.HasIndex("TimesheetEntryId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("MyTimesheet.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Billable");

                    b.Property<string>("Client");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("Duration");

                    b.Property<int>("EmpID");

                    b.Property<string>("ProjectName");

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<int?>("TimesheetEntryId");

                    b.HasKey("Id");

                    b.HasIndex("EmpID");

                    b.HasIndex("TimesheetEntryId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MyTimesheet.Models.TimesheetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId");

                    b.Property<string>("Name");

                    b.Property<int?>("ProjectsId");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("MyTimesheet.Models.Employee", b =>
                {
                    b.HasOne("MyTimesheet.Models.TimesheetEntry")
                        .WithMany("EmployeeList")
                        .HasForeignKey("TimesheetEntryId");
                });

            modelBuilder.Entity("MyTimesheet.Models.Project", b =>
                {
                    b.HasOne("MyTimesheet.Models.Employee")
                        .WithMany("getProjects")
                        .HasForeignKey("EmpID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyTimesheet.Models.TimesheetEntry")
                        .WithMany("ProjectList")
                        .HasForeignKey("TimesheetEntryId");
                });

            modelBuilder.Entity("MyTimesheet.Models.TimesheetEntry", b =>
                {
                    b.HasOne("MyTimesheet.Models.Project", "Projects")
                        .WithMany()
                        .HasForeignKey("ProjectsId");
                });
#pragma warning restore 612, 618
        }
    }
}
